#include "ros/ros.h"
#include "rctestpkg/MPC_CC.h"

ros::ServiceClient *clientPtr;

void listenerCallBack(const rctestpkg::TestTalkerMsg::ConstPtr& msg) {
	ROS_INFO("I heard %ld", (long int)msg->TestTalkerInt);

	ros::ServiceClient client = (ros::ServiceClient)*clientPtr;
	rctestpkg::MultTwoInts srv;
	srv.request.a = (long int)msg->TestTalkerInt;
	srv.request.b = 2;
	float64 vr
	float64 u0
	float64 i0
	float64 wv
	float64 wi
	float64 i_max
	float64 i_min

	if (client.call(srv)) {
		ROS_INFO("Product: %ld", (long int)srv.response.product);
	}
	else {
		ROS_INFO("Failed to call service CC_MPC");
	}
}


int main(int argc, char ** argv) {
	ros::init(argc, argv, "CCtestClient");
	ros::NodeHandle n;
	ros::Subscriber sub = n.subscribe("MPC_CC2", 1, listenerCallBack);
	ros::ServiceClient client = n.serviceClient<rctestpkg::MultTwoInts>("MultTwoInts");
	clientPtr = &client;

	ros::spin();
 
	return 0;
}
